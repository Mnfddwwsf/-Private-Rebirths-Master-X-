local Window = OrionLib:MakeWindow({
    Name = "[‚òÉÔ∏è Christmas] Rebirths Master X",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionTest"
})

-- Main Tab
local MainTab = Window:MakeTab({
    Name = "üè† Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local MainSection = MainTab:AddSection({
    Name = "Main"
})

MainTab:AddButton({
    Name = "V4.2.6",
    Callback = function()
        player.Character.Humanoid.WalkSpeed = 16
    end
})

MainTab:AddButton({
    Name = "Credits : HackHubüé©",
    Callback = function()
        player.Character.Humanoid.JumpPower = 16
    end
})

-- New Menu Farm Tab
local MenuFarmTab = Window:MakeTab({
    Name = "üöú Menu Farm",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local MenuFarmSection = MenuFarmTab:AddSection({
    Name = "Auto Features"
})

_G.autoClicker = false
_G.autoRebirths = false

MenuFarmTab:AddToggle({
    Name = "AutoClicker",
    Default = false,
    Callback = function(state)
        _G.autoClicker = state
        if state then
            OrionLib:MakeNotification({
                Name = "AutoClicker On!",
                Content = "AutoClicker has been enabled.",
                Image = "rbxassetid://4483345998",
                Time = 3
            })

            -- Start the AutoClicker loop
            spawn(function()
                while _G.autoClicker do
                    game:GetService("ReplicatedStorage"):WaitForChild("TappingRemote"):WaitForChild("Tap"):FireServer()
                    wait(0.1) -- Adjust the wait time if needed
                end
            end)
        else
            OrionLib:MakeNotification({
                Name = "AutoClicker Off!",
                Content = "AutoClicker has been disabled.",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        end
    end
})

MenuFarmTab:AddToggle({
    Name = "AutoRebirths",
    Default = false,
    Callback = function(state)
        _G.autoRebirths = state
        if state then
            OrionLib:MakeNotification({
                Name = "AutoRebirths On!",
                Content = "AutoRebirths has been enabled.",
                Image = "rbxassetid://4483345998",
                Time = 3
            })

            -- Start the AutoRebirths loop
            spawn(function()
                while _G.autoRebirths do
                    local args = {
                        [1] = 100000
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Rebirth"):FireServer(unpack(args))
                    wait(0.1) -- Adjust the wait time if needed
                end
            end)
        else
            OrionLib:MakeNotification({
                Name = "AutoRebirths Off!",
                Content = "AutoRebirths has been disabled.",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        end
    end
})

-- New Menu Egg Tab
local MenuEggTab = Window:MakeTab({
    Name = "ü•ö Menu Egg",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local MenuEggSection = MenuEggTab:AddSection({
    Name = "Egg Features"
})

-- Add tip about inventory display issue
MenuEggTab:AddLabel("Tip: After hatching an egg, you may not see the pet in your inventory.")
MenuEggTab:AddLabel("If this happens, you need to reset or rejoin the game to display the pet.")

local eggNames = {
    "Forest Egg",
    "Winter Egg",
    "Desert Egg",
    "Beach Egg",
    "Atlantis Egg",
    "Volcanic Egg",
    "Candy Egg",
    "Castel Egg" -- Added Castel Egg here
}

for _, eggName in ipairs(eggNames) do
    MenuEggTab:AddToggle({
        Name = eggName,
        Default = false,
        Callback = function(state)
            if state then
                OrionLib:MakeNotification({
                    Name = eggName .. " On!",
                    Content = eggName .. " has been enabled.",
                    Image = "rbxassetid://4483345998",
                    Time = 3
                })

                _G.auto = true
                spawn(function()
                    while _G.auto do
                        local args = {
                            [1] = workspace:WaitForChild("Eggs"):WaitForChild(eggName)
                        }
                        game:GetService("ReplicatedStorage"):WaitForChild("EggHatchingRemote"):WaitForChild("HatchServer"):InvokeServer(unpack(args))
                        wait(3) -- Adjust the wait time if needed
                    end
                end)
            else
                OrionLib:MakeNotification({
                    Name = eggName .. " Off!",
                    Content = eggName .. " has been disabled.",
                    Image = "rbxassetid://4483345998",
                    Time = 3
                })
                
                _G.auto = false
            end
        end
    })
end

-- New EggSettings Tab
local EggSettingsTab = Window:MakeTab({
    Name = "‚öôÔ∏è EggSettings",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local EggSettingsSection = EggSettingsTab:AddSection({
    Name = "Egg Rarity Settings"
})

-- Add toggles for each egg rarity
local rarities = {
    "Common",
    "Uncommon",
    "Rare",
    "Epic",
    "Legendary",
    "Mythical"
}

for _, rarity in ipairs(rarities) do
    EggSettingsTab:AddToggle({
        Name = rarity,
        Default = false,
        Callback = function(state)
            local args = {
                [1] = rarity,
                [2] = state
            }
            game:GetService("ReplicatedStorage"):WaitForChild("EggHatchingRemote"):WaitForChild("ToggleAutoDelete"):FireServer(unpack(args))
            
            OrionLib:MakeNotification({
                Name = rarity .. " Setting",
                Content = rarity .. " has been " .. (state and "enabled." or "disabled."),
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        end
    })
end
